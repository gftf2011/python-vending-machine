version: "3.8"

services:
  postgresql:
    container_name: postgresql_core_db_dev
    build:
      context: .
      dockerfile: ./docker/dev/images/postgresql/Dockerfile
      args:
        postgres_root_user: postgres
        postgres_root_password: root
        postgres_user: app
        postgres_password: 0863b9d7fe174a9b9fbff99b8a17f882
        postgres_db: postgres
        postgres_port: 5432
    restart: always
    volumes:
      - ./scripts/dev/postgresql/init.sh:/docker-entrypoint-initdb.d/init.sh
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready --username=postgres --dbname=postgres --port=5432",
        ]
      interval: 30s
      retries: 10
      start_period: 30s
      timeout: 30s
    networks:
      - app_network

  pg_admin:
    container_name: pg_admin_dev
    build:
      context: .
      dockerfile: ./docker/dev/images/pg_admin/Dockerfile
      args:
        pg_admin_email: admin@mail.com
        pg_admin_pass: admin
        pg_admin_port: 80
    restart: always
    ports:
      - 8080:80
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - app_network

  python:
    container_name: python_dev
    build:
      context: .
      dockerfile: ./docker/dev/images/python/Dockerfile
      args:
        python_host: "0.0.0.0"
        python_port: 8000
    restart: always
    ports:
      - 8000:8000
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - app_network

volumes:
  postgres_data: {}

networks:
  app_network:
    driver: bridge
