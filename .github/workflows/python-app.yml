# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  initialize-app:
    runs-on: ubuntu-latest
    if: ${{ (github.ref == 'refs/heads/main') }}
    strategy:
      matrix:
        python-version: ['3.12.4']
    name: Cache Python Dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.3
          poetry install --no-root --no-interaction --no-ansi

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
          key: poetry-cache.${{ github.ref }}.${{ github.sha }}

      - name: Cache .venv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-app-cache-key.${{ github.ref }}.${{ github.sha }}

      - name: Cache poetry.lock
        uses: actions/cache@v3
        with:
          path: ./poetry.lock
          key: poetry-lock-app-cache-key.${{ github.ref }}.${{ github.sha }}

  test-and-lint:
    runs-on: ubuntu-latest
    needs: initialize-app
    if: ${{ (github.ref == 'refs/heads/main') }}
    strategy:
      matrix:
        python-version: ['3.12.4']
    name: Test And Linting Python v${{ matrix.python-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.3
          poetry install --no-root --no-interaction --no-ansi

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
          key: poetry-cache.${{ github.ref }}.${{ github.sha }}

      - name: Use Cached venv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-app-cache-key.${{ github.ref }}.${{ github.sha }}
          
      - name: Use Cached poetry.lock
        uses: actions/cache@v3
        with:
          path: ./.poetry.lock
          key: poetry-lock-app-cache-key.${{ github.ref }}.${{ github.sha }}

      # - name: Linting
      #   run: |
      #     poetry run pylint .

      - name: Testing
        run: |
          ./cmds/test_all.sh
